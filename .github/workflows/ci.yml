name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image for testing
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        load: true
        tags: test-image
        build-args: |
          DEV_MODE=true
          PYTHON_VARIANT=
    
    - name: Create output directories
      run: |
        mkdir -p test-results coverage-results
        chmod 777 test-results coverage-results
    
    - name: Run tests in Docker container
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/test-results:/app/test-results \
          -v ${{ github.workspace }}/coverage-results:/app/coverage-results \
          test-image \
          bash -c "
            python -m pytest -v \
              --junitxml=/app/test-results/pytest.xml \
              --cov=. \
              --cov-report=xml:/app/coverage-results/coverage.xml \
              --cov-report=html:/app/coverage-results/htmlcov \
              --cov-report=term-missing
          "
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
    
    - name: Upload coverage results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-results
        path: coverage-results/
    
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Test Results
        path: test-results/pytest.xml
        reporter: java-junit
    
    - name: Coverage Summary
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage-results/coverage.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
    
    - name: Add coverage comment to PR
      if: github.event_name == 'pull_request'
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ github.token }}
        COVERAGE_DATA_PATH: coverage-results/coverage.xml

  push:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
    
    - name: Build and push production Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          DEV_MODE=false